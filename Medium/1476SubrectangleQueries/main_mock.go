// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package SubrectangleQueries is a generated GoMock package.
package SubrectangleQueries

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSubrectangleQueriesInterface is a mock of SubrectangleQueriesInterface interface.
type MockSubrectangleQueriesInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSubrectangleQueriesInterfaceMockRecorder
}

// MockSubrectangleQueriesInterfaceMockRecorder is the mock recorder for MockSubrectangleQueriesInterface.
type MockSubrectangleQueriesInterfaceMockRecorder struct {
	mock *MockSubrectangleQueriesInterface
}

// NewMockSubrectangleQueriesInterface creates a new mock instance.
func NewMockSubrectangleQueriesInterface(ctrl *gomock.Controller) *MockSubrectangleQueriesInterface {
	mock := &MockSubrectangleQueriesInterface{ctrl: ctrl}
	mock.recorder = &MockSubrectangleQueriesInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubrectangleQueriesInterface) EXPECT() *MockSubrectangleQueriesInterfaceMockRecorder {
	return m.recorder
}

// GetValue mocks base method.
func (m *MockSubrectangleQueriesInterface) GetValue(row, col int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue", row, col)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockSubrectangleQueriesInterfaceMockRecorder) GetValue(row, col interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockSubrectangleQueriesInterface)(nil).GetValue), row, col)
}

// SubrectangleQueriesConstructor mocks base method.
func (m *MockSubrectangleQueriesInterface) SubrectangleQueriesConstructor(rectangle [][]int) SubrectangleQueries {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubrectangleQueriesConstructor", rectangle)
	ret0, _ := ret[0].(SubrectangleQueries)
	return ret0
}

// SubrectangleQueriesConstructor indicates an expected call of SubrectangleQueriesConstructor.
func (mr *MockSubrectangleQueriesInterfaceMockRecorder) SubrectangleQueriesConstructor(rectangle interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubrectangleQueriesConstructor", reflect.TypeOf((*MockSubrectangleQueriesInterface)(nil).SubrectangleQueriesConstructor), rectangle)
}

// UpdateSubrectangle mocks base method.
func (m *MockSubrectangleQueriesInterface) UpdateSubrectangle(row1, col1, row2, col2, newValue int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateSubrectangle", row1, col1, row2, col2, newValue)
}

// UpdateSubrectangle indicates an expected call of UpdateSubrectangle.
func (mr *MockSubrectangleQueriesInterfaceMockRecorder) UpdateSubrectangle(row1, col1, row2, col2, newValue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSubrectangle", reflect.TypeOf((*MockSubrectangleQueriesInterface)(nil).UpdateSubrectangle), row1, col1, row2, col2, newValue)
}
